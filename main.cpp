#include "utils.h"
#include "node.h"
#include "events.h"

vector<Node *> LIST_OF_NODES;
set<Event> LIST_OF_EVENTS;
long double CURRENT_TIME;

void init(string file_name){
    ifstream input(file_name);
    if(!input.is_open()){
        cout << "File is not readable" << endl;
        exit(1);
    }
    
    Block * GENESIS_BLOCK = new Block(); // not implemented
   
    int numberOfPerrs, numberOfEdges;
    input >> numberOfPerrs >> numberOfEdges;
    
    for(int i = 0; i < numberOfPerrs; i ++){
        LIST_OF_NODES.push_back(new Node(i));
        LIST_OF_NODES[i]->add_block_to_tree(GENESIS_BLOCK);
    }
    
    for(int i = 0; i < numberOfEdges; i ++){
        int n1, n2;
        input >> n1 >> n2;
        LIST_OF_NODES[n1]->add_node(LIST_OF_NODES[n2]);
        LIST_OF_NODES[n2]->add_node(LIST_OF_NODES[n1]);
    }

    input.close();
}


void run_loop(){
    CURRENT_TIME = 0;
    while(/* condition */) {
        auto top = LIST_OF_EVENTS.begin();
        top->simulator();
        LIST_OF_EVENTS.erase(top);
        CURRENT_TIME ++;
    }
}

int main(int argc, char * argv[]){
    if(argc != 2){
        cout << "./main <file generated by grpah.py>" << endl;
        return 1;
    }
    string file_name(argv[1]);
    init(file_name);
    run_loop();
    return 0;
}


